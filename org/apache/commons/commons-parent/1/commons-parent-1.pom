<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.apache</groupId>
     <artifactId>apache</artifactId>
     <version>3</version>
  </parent>
  <groupId>org.apache.commons</groupId>
  <artifactId>commons-parent</artifactId>
  <packaging>pom</packaging>
  <!-- TODO: dummy version. In Maven 2.1, this will be auto-versioned being a generic parent -->
  <version>1</version>
  <name>Jakarta Commons</name>
  <url>http://jakarta.apache.org/commons/</url>
  <inceptionYear>2001</inceptionYear>

  <!-- We don't use Continuum yet -->
  <!--
  <ciManagement>
    <system>continuum</system>
    <notifiers>
      <notifier>
        <configuration>
          <address>commons-dev@jakarta.apache.org</address>
        </configuration>
      </notifier>
    </notifiers>
  </ciManagement>
  -->

  <distributionManagement>

   <!--
     This POM's parent POM (the Apache root POM) provides repositories. Unfortunately,
     this allows for accidental deployments. So we disable them here by providing
     a dummy repository. Use "mvn -Prc deploy" (Apache snapshot repository) or
     "mvn -Prelease deploy" (Apache release repository), if you really want to deploy.
   -->
   <repository>
     <id>dummy</id>
     <name>Dummy to avoid accidental deploys</name>
     <url />
   </repository>
  </distributionManagement>

  <!--
    This section *must* be overwritten by subprojects. It is only to allow
    a release of the commons-parent POM.
  -->
  <scm>
    <connection>scm:svn:http://svn.apache.org/repos/asf/jakarta/commons/proper/commons-parent/tags/commons-parent-1</connection>
    <developerConnection>scm:svn:https://svn.apache.org/repos/asf/jakarta/commons/proper/commons-parent/tags/commons-parent-1</developerConnection>
    <url>http://svn.apache.org/viewvc/jakarta/commons/proper/commons-parent/tags/commons-parent-1</url>
  </scm>

  <mailingLists>
    <mailingList>
      <name>Commons Dev List</name>
      <subscribe>commons-dev-subscribe@jakarta.apache.org</subscribe>
      <unsubscribe>commons-dev-unsubscribe@jakarta.apache.org</unsubscribe>
      <post>commons-dev@jakarta.apache.org</post>
      <archive>http://mail-archives.apache.org/mod_mbox/jakarta-commons-dev</archive>
      <otherArchives>
        <otherArchive>http://www.mail-archive.com/commons-dev@jakarta.apache.org/</otherArchive>
        <otherArchive>http://www.nabble.com/Commons---Dev-f317.html</otherArchive>
      </otherArchives>
    </mailingList>
    <mailingList>
      <name>Commons User List</name>
      <subscribe>commons-user-subscribe@jakarta.apache.org</subscribe>
      <unsubscribe>commons-user-unsubscribe@jakarta.apache.org</unsubscribe>
      <post>commons-user@jakarta.apache.org</post>
      <archive>http://mail-archives.apache.org/mod_mbox/jakarta-commons-user</archive>
      <otherArchives>
        <otherArchive>http://www.mail-archive.com/commons-user@jakarta.apache.org/</otherArchive>
        <otherArchive>http://www.nabble.com/Commons---User-f319.html</otherArchive>
      </otherArchives>
    </mailingList>
  </mailingLists>
  <build>
    <plugins>
      <!-- TODO: later use toolchain support to do compilation on an external JDK 1.3+ compiler -->
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>${maven.compile.source}</source>
          <target>${maven.compile.target}</target>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-idea-plugin</artifactId>
        <configuration>
          <jdkLevel>${maven.compile.source}</jdkLevel>
        </configuration>
      </plugin>
      <plugin>
		<!-- This should possibly better be done by using a resource
		     definition. However, if we declare a resource with
		     ${basedir} as the base directory, then the
		     maven-source-plugin will add the whole directory to
		     its contents.
		-->
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <phase>generate-resources</phase>
            <configuration>
              <tasks>
                <copy todir="${project.build.outputDirectory}/META-INF">
                  <fileset dir="${basedir}">
                    <include name="LICENSE.txt" />
                    <include name="NOTICE.txt" />
                  </fileset>
                </copy>
              </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>release</id>
      <distributionManagement>
        <repository>
          <id>apache.releases</id>
          <name>Apache Release Distribution Repository</name>
          <url>scp://people.apache.org/www/people.apache.org/repo/m2-ibiblio-rsync-repository</url>
        </repository>
      </distributionManagement>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-source-plugin</artifactId>
            <executions>
              <execution>
                <id>create-source-jar</id>
                <goals>
                  <goal>jar</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <artifactId>maven-javadoc-plugin</artifactId>
            <executions>
              <execution>
                <id>create-javadoc-jar</id>
                <goals>
                  <goal>jar</goal>
                </goals>
                <configuration>
                  <source>${maven.compile.source}</source>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>rc</id>
      <distributionManagement>
        <repository>
          <id>apache.snapshots</id>
          <name>Apache Development Snapshot Repository</name>
          <url>scp://people.apache.org/www/people.apache.org/repo/m2-snapshot-repository</url>
        </repository>
      </distributionManagement>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-source-plugin</artifactId>
            <executions>
              <execution>
                <id>create-source-jar</id>
                <goals>
                  <goal>jar</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <artifactId>maven-javadoc-plugin</artifactId>
            <executions>
              <execution>
                <id>create-javadoc-jar</id>
                <goals>
                  <goal>jar</goal>
                </goals>
                <configuration>
                  <source>${maven.compile.source}</source>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <!-- Example configuration for compiler source and target JVM -->
  <!--
  <properties>
    <maven.compile.source>1.3</maven.compile.source>
    <maven.compile.target>1.3</maven.compile.target>
  </properties> 
  -->
</project>